/*
 * PrintingPricesView.java
 */

package printingprices;

import org.jdesktop.application.Action;
import org.jdesktop.application.ResourceMap;
import org.jdesktop.application.SingleFrameApplication;
import org.jdesktop.application.FrameView;
import org.jdesktop.application.TaskMonitor;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.Timer;
import javax.swing.Icon;
import javax.swing.JDialog;
import javax.swing.JFrame;
import java.text.*;

/**
 * The application's main frame.
 */
public class PrintingPricesView extends FrameView {

    public PrintingPricesView(SingleFrameApplication app) {
        super(app);

        initComponents();

        // status bar initialization - message timeout, idle icon and busy animation, etc
        ResourceMap resourceMap = getResourceMap();
        int messageTimeout = resourceMap.getInteger("StatusBar.messageTimeout");
        messageTimer = new Timer(messageTimeout, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                statusMessageLabel.setText("");
            }
        });
        messageTimer.setRepeats(false);
        int busyAnimationRate = resourceMap.getInteger("StatusBar.busyAnimationRate");
        for (int i = 0; i < busyIcons.length; i++) {
            busyIcons[i] = resourceMap.getIcon("StatusBar.busyIcons[" + i + "]");
        }
        busyIconTimer = new Timer(busyAnimationRate, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                busyIconIndex = (busyIconIndex + 1) % busyIcons.length;
                statusAnimationLabel.setIcon(busyIcons[busyIconIndex]);
            }
        });
        idleIcon = resourceMap.getIcon("StatusBar.idleIcon");
        statusAnimationLabel.setIcon(idleIcon);
        progressBar.setVisible(false);

        // connecting action tasks to status bar via TaskMonitor
        TaskMonitor taskMonitor = new TaskMonitor(getApplication().getContext());
        taskMonitor.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                String propertyName = evt.getPropertyName();
                if ("started".equals(propertyName)) {
                    if (!busyIconTimer.isRunning()) {
                        statusAnimationLabel.setIcon(busyIcons[0]);
                        busyIconIndex = 0;
                        busyIconTimer.start();
                    }
                    progressBar.setVisible(true);
                    progressBar.setIndeterminate(true);
                } else if ("done".equals(propertyName)) {
                    busyIconTimer.stop();
                    statusAnimationLabel.setIcon(idleIcon);
                    progressBar.setVisible(false);
                    progressBar.setValue(0);
                } else if ("message".equals(propertyName)) {
                    String text = (String)(evt.getNewValue());
                    statusMessageLabel.setText((text == null) ? "" : text);
                    messageTimer.restart();
                } else if ("progress".equals(propertyName)) {
                    int value = (Integer)(evt.getNewValue());
                    progressBar.setVisible(true);
                    progressBar.setIndeterminate(false);
                    progressBar.setValue(value);
                }
            }
        });
    }

    @Action
    public void showAboutBox() {
        if (aboutBox == null) {
            JFrame mainFrame = PrintingPricesApp.getApplication().getMainFrame();
            aboutBox = new PrintingPricesAboutBox(mainFrame);
            aboutBox.setLocationRelativeTo(mainFrame);
        }
        PrintingPricesApp.getApplication().show(aboutBox);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        title = new javax.swing.JLabel();
        qty1 = new javax.swing.JLabel();
        qty2 = new javax.swing.JLabel();
        qty3 = new javax.swing.JLabel();
        qty4 = new javax.swing.JLabel();
        qty5 = new javax.swing.JLabel();
        price1 = new javax.swing.JLabel();
        price2 = new javax.swing.JLabel();
        price3 = new javax.swing.JLabel();
        price4 = new javax.swing.JLabel();
        price5 = new javax.swing.JLabel();
        qtyLabel = new javax.swing.JLabel();
        qtyInput = new javax.swing.JTextField();
        calcButton = new javax.swing.JButton();
        priceLabel = new javax.swing.JLabel();
        priceOutput = new javax.swing.JLabel();
        totalLabel = new javax.swing.JLabel();
        totalOutput = new javax.swing.JLabel();
        menuBar = new javax.swing.JMenuBar();
        javax.swing.JMenu fileMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem exitMenuItem = new javax.swing.JMenuItem();
        javax.swing.JMenu helpMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem aboutMenuItem = new javax.swing.JMenuItem();
        statusPanel = new javax.swing.JPanel();
        javax.swing.JSeparator statusPanelSeparator = new javax.swing.JSeparator();
        statusMessageLabel = new javax.swing.JLabel();
        statusAnimationLabel = new javax.swing.JLabel();
        progressBar = new javax.swing.JProgressBar();

        mainPanel.setName("mainPanel"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(printingprices.PrintingPricesApp.class).getContext().getResourceMap(PrintingPricesView.class);
        title.setFont(resourceMap.getFont("title.font")); // NOI18N
        title.setText(resourceMap.getString("title.text")); // NOI18N
        title.setName("title"); // NOI18N

        qty1.setFont(resourceMap.getFont("qty1.font")); // NOI18N
        qty1.setText(resourceMap.getString("qty1.text")); // NOI18N
        qty1.setName("qty1"); // NOI18N

        qty2.setFont(resourceMap.getFont("qty2.font")); // NOI18N
        qty2.setText(resourceMap.getString("qty2.text")); // NOI18N
        qty2.setName("qty2"); // NOI18N

        qty3.setFont(resourceMap.getFont("qty3.font")); // NOI18N
        qty3.setText(resourceMap.getString("qty3.text")); // NOI18N
        qty3.setName("qty3"); // NOI18N

        qty4.setFont(resourceMap.getFont("qty4.font")); // NOI18N
        qty4.setText(resourceMap.getString("qty4.text")); // NOI18N
        qty4.setName("qty4"); // NOI18N

        qty5.setFont(resourceMap.getFont("qty5.font")); // NOI18N
        qty5.setText(resourceMap.getString("qty5.text")); // NOI18N
        qty5.setName("qty5"); // NOI18N

        price1.setFont(resourceMap.getFont("price1.font")); // NOI18N
        price1.setText(resourceMap.getString("price1.text")); // NOI18N
        price1.setName("price1"); // NOI18N

        price2.setFont(resourceMap.getFont("price2.font")); // NOI18N
        price2.setText(resourceMap.getString("price2.text")); // NOI18N
        price2.setName("price2"); // NOI18N

        price3.setFont(resourceMap.getFont("price3.font")); // NOI18N
        price3.setText(resourceMap.getString("price3.text")); // NOI18N
        price3.setName("price3"); // NOI18N

        price4.setFont(resourceMap.getFont("price4.font")); // NOI18N
        price4.setText(resourceMap.getString("price4.text")); // NOI18N
        price4.setName("price4"); // NOI18N

        price5.setFont(resourceMap.getFont("price5.font")); // NOI18N
        price5.setText(resourceMap.getString("price5.text")); // NOI18N
        price5.setName("price5"); // NOI18N

        qtyLabel.setFont(resourceMap.getFont("qtyLabel.font")); // NOI18N
        qtyLabel.setText(resourceMap.getString("qtyLabel.text")); // NOI18N
        qtyLabel.setName("qtyLabel"); // NOI18N

        qtyInput.setFont(resourceMap.getFont("qtyInput.font")); // NOI18N
        qtyInput.setText(resourceMap.getString("qtyInput.text")); // NOI18N
        qtyInput.setName("qtyInput"); // NOI18N

        calcButton.setText(resourceMap.getString("calcButton.text")); // NOI18N
        calcButton.setName("calcButton"); // NOI18N
        calcButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calcButtonActionPerformed(evt);
            }
        });

        priceLabel.setFont(resourceMap.getFont("priceLabel.font")); // NOI18N
        priceLabel.setText(resourceMap.getString("priceLabel.text")); // NOI18N
        priceLabel.setName("priceLabel"); // NOI18N

        priceOutput.setFont(resourceMap.getFont("priceOutput.font")); // NOI18N
        priceOutput.setText(resourceMap.getString("priceOutput.text")); // NOI18N
        priceOutput.setName("priceOutput"); // NOI18N

        totalLabel.setFont(resourceMap.getFont("totalLabel.font")); // NOI18N
        totalLabel.setText(resourceMap.getString("totalLabel.text")); // NOI18N
        totalLabel.setName("totalLabel"); // NOI18N

        totalOutput.setFont(resourceMap.getFont("totalOutput.font")); // NOI18N
        totalOutput.setText(resourceMap.getString("totalOutput.text")); // NOI18N
        totalOutput.setName("totalOutput"); // NOI18N

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(title))
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(qty1)
                            .addComponent(qty2)
                            .addComponent(qty3)
                            .addComponent(qty4)
                            .addComponent(qty5))
                        .addGap(36, 36, 36)
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(price2)
                            .addComponent(price1)
                            .addComponent(price5)
                            .addComponent(price4)
                            .addComponent(price3))))
                .addContainerGap(102, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(totalLabel)
                    .addComponent(priceLabel)
                    .addComponent(qtyLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(qtyInput)
                        .addComponent(calcButton))
                    .addComponent(priceOutput)
                    .addComponent(totalOutput))
                .addGap(18, 18, 18))
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(title)
                .addGap(18, 18, 18)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(qty1)
                    .addComponent(price1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(qty2)
                    .addComponent(price2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(qty3)
                    .addComponent(price3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(qty4)
                    .addComponent(price4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(qty5)
                    .addComponent(price5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(qtyLabel))
                    .addComponent(qtyInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(calcButton)
                .addGap(18, 18, 18)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(priceLabel)
                    .addComponent(priceOutput))
                .addGap(18, 18, 18)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(totalLabel)
                    .addComponent(totalOutput))
                .addGap(29, 29, 29))
        );

        menuBar.setName("menuBar"); // NOI18N

        fileMenu.setText(resourceMap.getString("fileMenu.text")); // NOI18N
        fileMenu.setName("fileMenu"); // NOI18N

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(printingprices.PrintingPricesApp.class).getContext().getActionMap(PrintingPricesView.class, this);
        exitMenuItem.setAction(actionMap.get("quit")); // NOI18N
        exitMenuItem.setName("exitMenuItem"); // NOI18N
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        helpMenu.setText(resourceMap.getString("helpMenu.text")); // NOI18N
        helpMenu.setName("helpMenu"); // NOI18N

        aboutMenuItem.setAction(actionMap.get("showAboutBox")); // NOI18N
        aboutMenuItem.setName("aboutMenuItem"); // NOI18N
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        statusPanel.setName("statusPanel"); // NOI18N

        statusPanelSeparator.setName("statusPanelSeparator"); // NOI18N

        statusMessageLabel.setName("statusMessageLabel"); // NOI18N

        statusAnimationLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        statusAnimationLabel.setName("statusAnimationLabel"); // NOI18N

        progressBar.setName("progressBar"); // NOI18N

        javax.swing.GroupLayout statusPanelLayout = new javax.swing.GroupLayout(statusPanel);
        statusPanel.setLayout(statusPanelLayout);
        statusPanelLayout.setHorizontalGroup(
            statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(statusPanelSeparator, javax.swing.GroupLayout.DEFAULT_SIZE, 384, Short.MAX_VALUE)
            .addGroup(statusPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(statusMessageLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 214, Short.MAX_VALUE)
                .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(statusAnimationLabel)
                .addContainerGap())
        );
        statusPanelLayout.setVerticalGroup(
            statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statusPanelLayout.createSequentialGroup()
                .addComponent(statusPanelSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(statusMessageLabel)
                    .addComponent(statusAnimationLabel)
                    .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3))
        );

        setComponent(mainPanel);
        setMenuBar(menuBar);
        setStatusBar(statusPanel);
    }// </editor-fold>//GEN-END:initComponents

    private void calcButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calcButtonActionPerformed
        int copies;
        double pricePerCopy, totalCost;

        pricePerCopy = 0;

        // Used to format the output to 2 decimal places with a leading $.
        // import java.text.*; needs to be added to package before DesimalFormat can be used.
        DecimalFormat x = new DecimalFormat("$0.00");
      
        // gets the number of copies entered by the user and converts it to an integer value
        copies = Integer.parseInt(qtyInput.getText());

        if (copies > 1000)
        {
              pricePerCopy = 0.25;
        }
        else if(copies >= 750)
        {
              pricePerCopy = 0.26;
        }
        else if (copies >= 401)
        {
              pricePerCopy = 0.27;
        }
        else if (copies >= 100)
        {
              pricePerCopy = 0.28;
        }
        else if (copies > 0)
        {
              pricePerCopy = 0.30; 
        }

        // calculate the total cost for printing
        totalCost = pricePerCopy * copies;

        // Display the price per copy and the total cost in labels on the main window.
        // Note the use of valueOf to convert the values to a string first, and the
        // use of x.format to display the values as per the formatting defined above.
        priceOutput.setText(String.valueOf(x.format(pricePerCopy)));
        totalOutput.setText(String.valueOf(x.format(totalCost)));

    }//GEN-LAST:event_calcButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton calcButton;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JLabel price1;
    private javax.swing.JLabel price2;
    private javax.swing.JLabel price3;
    private javax.swing.JLabel price4;
    private javax.swing.JLabel price5;
    private javax.swing.JLabel priceLabel;
    private javax.swing.JLabel priceOutput;
    private javax.swing.JProgressBar progressBar;
    private javax.swing.JLabel qty1;
    private javax.swing.JLabel qty2;
    private javax.swing.JLabel qty3;
    private javax.swing.JLabel qty4;
    private javax.swing.JLabel qty5;
    private javax.swing.JTextField qtyInput;
    private javax.swing.JLabel qtyLabel;
    private javax.swing.JLabel statusAnimationLabel;
    private javax.swing.JLabel statusMessageLabel;
    private javax.swing.JPanel statusPanel;
    private javax.swing.JLabel title;
    private javax.swing.JLabel totalLabel;
    private javax.swing.JLabel totalOutput;
    // End of variables declaration//GEN-END:variables

    private final Timer messageTimer;
    private final Timer busyIconTimer;
    private final Icon idleIcon;
    private final Icon[] busyIcons = new Icon[15];
    private int busyIconIndex = 0;

    private JDialog aboutBox;
}
